// realtime-server.js
const WebSocket = require('ws');
const http = require('http');

const wss = new WebSocket.Server({ noServer: true });

wss.on('connection', ws => {
  console.log('Client terhubung ke WebSocket');

  ws.on('message', message => {
    console.log(`Pesan diterima: ${message}`);
    // Kirim pesan kembali ke semua klien yang terhubung
    wss.clients.forEach(client => {
      if (client.readyState === WebSocket.OPEN) {
        client.send(`Pesan Anda: ${message}`);
      }
    });
  });

  ws.on('close', () => {
    console.log('Koneksi WebSocket terputus');
  });
});

const server = http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/plain' });
  res.end('Server WebSocket berjalan');
});

server.on('upgrade', (request, socket, head) => {
  wss.handleUpgrade(request, socket, head, ws => {
    wss.emit('connection', ws, request);
  });
});

server.listen(8080, () => {
  console.log('Server WebSocket mendengarkan di port 8080');
});